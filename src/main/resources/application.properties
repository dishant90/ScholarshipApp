#server.port: 9000
#management.port: 9001
#management.address: 127.0.0.1

# ===============================
# = JavaMail Configuration
# ===============================
support.email=apptriples@gmail.com
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.protocol=smtps
spring.mail.username=apptriples@gmail.com
spring.mail.password=impPart01
spring.mail.properties.mail.transport.protocol=smtps
spring.mail.properties.mail.smtps.auth=true
spring.mail.properties.mail.smtps.starttls.enable=true
spring.mail.properties.mail.smtps.timeout=8000

# ===============================
# = LOGGING
# ===============================
logging.file=scholarship.log
#logging.path=/logs

# ===============================
# = DATA SOURCE
# ===============================
# DataSource settings: we have "tripleSDb" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/tripleSDb
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.platform=mysql
# spring.datasource.initialize = false
# spring.datasource.continueOnError=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email_ID, password, true from user where email_id=?
#spring.queries.users-query=select * from user where email_id=?
spring.queries.roles-query=select u.email_id, r.name from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email_id=?